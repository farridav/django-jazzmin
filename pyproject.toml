[project]
name = "django-jazzmin"
version = "2.6.0"
description = "Drop-in theme for django admin, that utilises AdminLTE 3 & Bootstrap 4 to make yo' admin look jazzy"
license = "MIT"
authors = [
    {name = "Shipit", email="packages@shipit.ltd"},
]
maintainers = [
    {name = "Shipit", email="packages@shipit.ltd"},
]
readme = "README.md"
requires-python = ">=3.6.2"
keywords = ["django", "dashboard", "theme", "admin", "jazzmin"]
classifiers = [
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "django >= 2.2",
]

[project.urls]
homepage = "https://github.com/farridav/django-jazzmin"
repository = "https://github.com/farridav/django-jazzmin"
documentation = "https://django-jazzmin.readthedocs.io"
"Bug Tracker" = "https://github.com/farridav/django-jazzmin/issues"
"All Releases" = "https://github.com/farridav/django-jazzmin/releases"
"Latest Release" = "https://github.com/farridav/django-jazzmin/releases/latest"
"Source" = "https://github.com/farridav/django-jazzmin"

[project.optional-dependencies]
dev = [
    "django-debug-toolbar ~= 3.2.4", # unparallelled debugging in django
    "Werkzeug ~= 2.0.2",             # support for werkzeug debugger in runserver_plus
    "django-extensions ~= 3.1.5",    # Django Sugar for development
    "flake9 ~= 3.8.3",               # Static code checking (with pyproject.toml support)
    "pytest ~= 6.2.5",               # Test runner
    "pytest-django ~= 4.5.2",        # Django integration for pytest
    "pytest-cov ~= 3.0.0",           # Measure code coverage during tests
    "tox ~= 3.24.5",                 # Test runner for python packages
    "Faker ~= 11.3.0",               # less fake fake data
    "coveralls ~= 3.3.1",            # Publish code coverage to coveralls
    "beautifulsoup4 ~= 4.10.0",      # Structure HTML documents into navigable things for test assertions
    "mkdocs ~= 1.2.3",               # Tool for serving rendered markdown docs
    "polib ~= 1.1.1",                # Tool for dealing with translation files
    "factory-boy ~= 3.2.1",          # Factory generation
    "mypy ~= 0.931",                 # Type checking
    "click ~= 8.0.3",                # Framework for building cli's
    "ipdb ~= 0.13.9",                # ipython breakpoints
    "black ~= 21.12b0",              # Code formatting and linting (with pyproject.toml support)
]

[tool.hatch.build]
packages = ["jazzmin"]
artifacts = [
  "*.mo",
]

[tool.hatch.build.targets.wheel.hooks.custom]
dependencies = [
  "django",
]

[tool.black]
line-length = 120
target-version = ['py310']

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb -p no:warnings --junitxml=.reports/coverage.xml --cov-report=html:.reports/htmlcov --cov jazzmin"
junit_family = "xunit2"
norecursedirs = ".git .tox _resource .mypy_cache build dist docs"
DJANGO_SETTINGS_MODULE = "tests.test_app.library.settings"
FAIL_INVALID_TEMPLATE_VARS = 1

[tool.flake8]
max-complexity = 10
ignore = ["C901", "W504", "W503", "E231", "E203"]
exclude = [".git", ".tox", "_resource", "migrations", "build", "dist", "docs"]
max-line-length = 120
show-source = true
statistics = false

[tool.coverage.run]
omit = ["*/__init__.py", ".tox", ".mypy_cache", ".reports", ".git"]

[tool.coverage.report]
omit = ["*/__init__.py", ".tox", ".mypy_cache", ".reports", ".git"]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    django2-{python3.6,python3.7},
    django3-{python3.6,python3.7,python3.8,python3.9},
    django4-{python3.8,python3.9,python3.10},
    # run one of the tests again but with coverage
    coveralls-django4-python3.10,
skipsdist = True

[gh-actions]
python =
    3.6: python3.6
    3.7: python3.7
    3.8: python3.8
    3.9: python3.9
    3.10: python3.10

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
commands =
    {envpython} -m flake8 jazzmin --max-line-length 120
    {envpython} -m pytest
deps =
    flake9
    pytest
    pytest-django
    pytest-cov
    coveralls
    mypy
    black
    beautifulsoup4
    dj-database-url
    importlib-metadata==4.13.0
    factory-boy
    django2: Django<3
    django3: Django<4
    django4: Django<5

[testenv:coveralls-django4-python3.10]
passenv = COVERALLS_REPO_TOKEN
commands =
    - mypy jazzmin --ignore-missing-imports
    black --check jazzmin tests --target-version py310 --line-length 120
    pytest
    - coveralls
"""

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
